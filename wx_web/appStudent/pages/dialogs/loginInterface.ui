<template>
    <ui-page>
      <!-- 登陆 && 注册 -->
      <ui-nav-bar slot="nav-bar">
        <ui-row height="46">
            <ui-col vertical-align="middle" align="left" space-left="10" width="50">
            </ui-col>
            <ui-col vertical-align="middle" align="center">
              <!--<ui-view class="nav_title">学员版</ui-view>-->
            </ui-col>
            <ui-col vertical-align="middle" align="center" space-left="10" width="50" bindtap="hideWindow">
                <!--<ui-icon type="cuowuguanbiquxiao" size="16" color="#A5A5A5"></ui-icon>-->
            </ui-col>
          </ui-row>
      </ui-nav-bar> 
      <ui-view ui:if="state === 0">
          <ui-ex-swiper speed="200" allow-touch-move="{{false}}" index="{{ currentNum }}" class="swiper_wrap" style="{{{ height : swiperHeight + 'px' }}}">
              <ui-ex-swiper-item>
                <ui-view class="login_wrap">
                  <!-- 1 -->
                  <ui-view class="portrait">
                      <!--<ui-icon type="laoshi" color="#eee" size="80"></ui-icon>-->
                      <ui-image src="{{ loginHeader }}"  width="100" height="100"></ui-image>
                  </ui-view>
                  <!-- 2 -->
                  <ui-view class="login_content">
                    <ui-form bindsubmit="formSubmit">
                      <ui-view>
                        <ui-input type="number" ui:model="{{ phone }}" name="name" placeholder="手机号" placeholder-style="color:#9C9C9C"></ui-input>
                      </ui-view>
                      <ui-view>
                        <ui-sms-input ui:model="{{ code }}" second="60" initText="获取验证码" bindsend="smsCode"></ui-sms-input>
                      </ui-view>
                      <ui-button formType="submit" type="primary" class="submit" bindtap="login">登录</ui-button>
                    </ui-form>
                  </ui-view>
                  <!-- 3 -->
                  <!-- <ui-view class="third_party_wrap">
                    <ui-divider>第三方账号登录</ui-divider>
                    <ui-row height="60" class="third_party">
                      <ui-col align="right" vertical-align="middle" space-right="20" bindtap="login_weixin">
                        <ui-view class="weixin">
                          <ui-icon type="wexin" color="#7EDE40" size="25"></ui-icon>
                        </ui-view>
                      </ui-col>
                      <ui-col align="left" vertical-align="middle" space-left="20" bindtap="login_qq">
                        <ui-view class="qq">
                          <ui-icon type="qq_img" color="#25A6F1" size="25"></ui-icon>
                        </ui-view>
                      </ui-col>
                    </ui-row>
                  </ui-view>-->
                  <!-- 4 -->
                  <ui-view class="login_bottom">
                    <ui-row height="40">
                      <ui-col align="right" vertical-align="top" space-right="10">
                        <!--<ui-view class="forget_password">忘记密码</ui-view>-->
                      </ui-col>
                      <!--<ui-col align="left" vertical-align="top" space-left="10" bindtap="loginPage1">
                          <ui-view>快速注册</ui-view>
                      </ui-col>-->
                    </ui-row>
                  </ui-view>
      
                </ui-view>
      
              </ui-ex-swiper-item>
              <ui-ex-swiper-item>
                <ui-view class="login_content2">
                  <ui-form bindsubmit="formSubmit">
                    <ui-row height="50" border-bottom>
                      <ui-col vertical-align="bottom">
                        <ui-input type="number" ui:model="{{ registerTel }}" name="tel" placeholder="请输入您的手机号码" maxlength="11" placeholder-style="color:#9C9C9C"></ui-input>
                      </ui-col>
                    </ui-row>
                    <ui-row height="50" border-bottom>
                      <ui-col vertical-align="bottom">
                        <!-- <ui-input name="code" placeholder="请输入验证码" maxlength="8" placeholder-style="color:#9C9C9C" ></ui-input> -->
                        <ui-sms-input ui:model="{{ code }}"  second="60" initText="获取验证码" bindsend="smsCode"></ui-sms-input>
                      </ui-col>
                      <!-- <ui-col width="80" align="center" vertical-align="middle">
                        <ui-view>获取验证码<ui-view>
                      </ui-col> -->
                    </ui-row>
                    <ui-row height="50" border-bottom>
                      <ui-col vertical-align="bottom">
                        <ui-input ui:model="{{ registerPassword }}" type="password" name="pwd" placeholder="请输入密码" placeholder-style="color:#9C9C9C" ></ui-input>
                      </ui-col>
                    </ui-row>
                    <!-- <ui-view class="submit">下一步</ui-view> -->
                    <ui-button formType="submit" type="primary" class="submit" bindtap="register">注册</ui-button>
                    
                    <ui-view  class="have_account" bindtap="loginPage2">已有账户，点击登录</ui-view>
                  </ui-form>
                </ui-view>
              </ui-ex-swiper-item>
            </ui-ex-swiper>
      </ui-view>
      <!-- 微信&&QQ账号绑定页面 -->
      <ui-view ui:if="state === 1">
      <!-- <ui-nav-bar >
          <ui-row height="46">
              <ui-col vertical-align="middle" align="left" space-left="10" width="50" bindtap="hideWindow">
                  <ui-icon type="close" size="16" color="#A5A5A5"></ui-icon>
              </ui-col>
              <ui-col vertical-align="middle" align="center">
                <ui-view class="nav_title">绑定账号</ui-view>
              </ui-col>
              <ui-col vertical-align="middle" align="center" width="50"></ui-col>
            </ui-row>
        </ui-nav-bar> -->
        <ui-view class="login_wrap">
          <ui-view class="login_content">
            <ui-form style="margin-top:30px;">
              <ui-view>
                <ui-input type="number" ui:model="{{ tel }}" name="tel" placeholder="手机号" placeholder-style="color:#9C9C9C"></ui-input>
              </ui-view>
              <ui-view>
                <ui-input ui:model="{{ pwd }}" type="password" name="pwd" placeholder="登录密码" placeholder-style="color:#9C9C9C" ></ui-input>
              </ui-view>
              <ui-view style="line-height:45px;padding-left:10px;margin-top:20px;border:0;color:#999;">如果该手机号账号未注册，会自动注册并绑定</ui-view>
              <ui-button formType="submit" type="primary" class="" bindtap="bindAccount">绑定该账号</ui-button>
            </ui-form>
          </ui-view>
        </ui-view>
      </ui-view>
    </ui-page>
</template>


<script>
  // loginInterface.js
const registerUrl = '/touchui-backstage/register.do'
const loginUrl = '/touchui-backstage/login.do'
import encryptRSA from '#/static/utils/security'
export default {
  config: {
    'navigationBarVisible': false,
    "scrollType": "div",
    "disableScroll":true,
    "title":'学员登陆'
  },
  data () {
    return {
      loginHeader:require('#/images/loginHeader.png'),
      barHeight: ui.STATUS_BAR_HEIGHT,
      swiperHeight: ui.DEFAULT_CONTENT_HEIGHT,
      currentNum: 0,
      registerTel: '',
      registerPassword: '',
      phone: '',
      loginPassword: '',
      code: '',
      flag: false,
      state:0,
      tel: '',
      pwd: '',
      openid:'',
      unionid:'',
      type:''
    }
  },
  methods: {
    navigateBack () {
      ui.navigateBack()
    },
    formSubmit (e) {
    },
    hideWindow (e) {
      this.state = 0 
      ui.hideDialog()
    },
    loginPage1 () {
      // ui.navigateTo({
      //   url: 'pages/templeteDemo/register/register'
      // })
      this.currentNum = 1
    },
    loginPage2 () {
      this.currentNum = 0
    },
    smsCode (run) {
      let myreg=/^[1][3,4,5,6,7,8][0-9]{9}$/;
      if (this.phone === '') {
        ui.showToast({ title: '请输入手机号' })
      }else if( ! myreg.test(this.phone)){
        ui.showToast({ title: '手机号有误' })
      }else{
        this.$http('POST',ui.getApp().apis.SENDMSG,{
           phone:this.phone,userrole:1
          },(res)=>{
             ui.showToast({ title: '验证码发送成功' })
             run()
             //alert(JSON.stringify(res))
          })
      }

    },
    login () {
      let myreg=/^[1][3,4,5,6,7,8][0-9]{9}$/;
      let pwd = this.loginPassword.toString().length
      if (this.phone === '') {
        ui.showToast({ title: '请输入手机号' })
      } else if ( ! myreg.test(this.phone)) {
        ui.showToast({ title: '手机号有误' })
      } else {
        let sendData = {
           phone:this.phone,userrole:1,pollcode:this.code
        }
        let  urlGetOpenid =  sessionStorage.getItem("openid");//获取openid
        if(urlGetOpenid){
          sendData.openid = urlGetOpenid
        }
        this.$http('POST',ui.getApp().apis.SMSLOGIN,sendData,(res)=>{
             res.result.userInfo.token = res.result.accessToken.token
             localStorage.setItem('token', JSON.stringify(res.result.accessToken));//缓存关键参数包括userId username  token
             localStorage.setItem('userInfo',JSON.stringify(res.result.userInfo))//缓存用户信息
             //开始缓存登录用户数据
             let userInfoList =  localStorage.getItem("userInfoList");//获取登录用户历史信息，用于切换账户
             if(userInfoList){
               userInfoList = JSON.parse(userInfoList)
               if(userInfoList.length>0){
               userInfoList.forEach(function (value,index) {
                 if(value.id == res.result.accessToken.userId){
                    
                    userInfoList[index] = res.result.userInfo
                    return
                  }else{
                    
                    userInfoList.push(res.result.userInfo)
                  }
                
                })
                }else{
                  
                  userInfoList.push(res.result.userInfo)
                }
               localStorage.setItem('userInfoList',JSON.stringify(userInfoList))
             }else{
               userInfoList = []
               
               userInfoList.push(res.result.userInfo)
               localStorage.setItem('userInfoList',JSON.stringify(userInfoList))
             }
             //登录用户数据缓存完毕
             ui.getApp().Ajax.header.token = res.result.accessToken.token
             ui.getApp().Ajax.header.userId = res.result.accessToken.userId
             ui.getApp().userInfo = res.result && res.result.userInfo
             this.code = ''//清空填写的验证码数据
           
            if(res.result.userInfo.headImg){//如果用户头像存在，则跳转首页，否则跳转至上传头像界面
              
              ui.redirectTo({
                  url: '/pages/index'
              })
            }else{
              ui.redirectTo({
                  url: '/pages/user/uploadHeadImg'
              })
            }
          })
      }
    },
    register () {
      let that = this
      let pwd = this.registerPassword.toString().length
      if (this.registerTel === '') {
        ui.showToast({ title: '请输入手机号' })
      } else if (pwd < 6) {
        ui.showToast({ title: '请输入6位以上密码' })
      } else if (this.code === '') {
        ui.showToast({ title: '请输入验证码' })
      } else {
        // this.flag = true

        ui.request({
          url: registerUrl,
          data: {
            tel: this.registerTel,
            pwd: encryptRSA(this.registerPassword)
          },
          success: function (result) {
            if (result.data.error_code === -1) {
              ui.showToast({ title: '接口失败' })
            } else if (result.data.error_code === 1001) {
              ui.showToast({ title: '注册失败' })
            } else if (result.data.error_code === 1002) {
              ui.showToast({ title: '手机号已被注册' })
            } else {
              ui.showToast({ title: '注册成功', icon: 'success' })
              that.currentNum = 0
            }
          },
          fail: function ({ errMsg }) {
            ui.showToast({ title: '请求失败' })
          }
        })
      }
    },

    login_qq(){
      ui.login({
        target: 'qq',
        success: data => {
          this.checkOpenid(data.openid)
        },
        fail:data=>{
        }
      })
    },
    //验证openid是否绑定
    checkOpenid(openid){
      let that = this
      ui.request({
        url: '/touchui-backstage/checkOpenid.do',
        data: {
          openid: openid,
        },
        success: function (data) {
          //没有绑定
          if(data.data.error_code === 0){
            that.state = 1
            that.type = 'qq'
            that.openid = openid
          }else if(data.data.error_code === 1){
            ui.showToast({ title: '登录成功', icon: 'success' })
            let userinfo = {
              isLogin: true,
              data: data.data.result
            }
            ui.setStorageSync('userinfo', data.data.result)
            ui.hideDialog({ userinfo: userinfo })
          }
        },
        fail: function (data) {
        }
      })
    },
    login_weixin(){
      ui.login({
        target: 'weixin',
        success: data => {
          this.checkUnionid(data.unionid)
        },
        fail:data=>{
        }
      })
      
    },
    //验证微信Unionid
    checkUnionid(unionid){
      let that = this
      ui.request({
        url: '/touchui-backstage/checkUnionid.do',
        data: {
          unionid: unionid,
        },
        success: function (data) {
          //没有绑定
          if(data.data.error_code === 0){
            that.state = 1
            that.type = 'wx'
            that.unionid = unionid
          }else if(data.data.error_code === 1){
            ui.showToast({ title: '登录成功', icon: 'success' })
            let userinfo = {
              isLogin: true,
              data: data.data.result
            }
            ui.setStorageSync('userinfo', data.data.result)
            ui.hideDialog({ userinfo: userinfo })
          }
        },
        fail: function (data) {
        }
      })
    },
    bindAccount(){
      let that = this
      if(this.type === 'wx'){
        ui.request({
          url: '/touchui-backstage/wxLogin.do',
          data: {
            unionid: this.unionid,
            tel:this.tel,
            pwd:encryptRSA(this.pwd)
          },
          success: function (data) {
            if (data.data.error_code === -1) {
              ui.showToast({ title: '接口失败' })
            } else if (data.data.error_code === 2001) {
              ui.showToast({ title: '密码错误' })
            } else if (data.data.error_code === 2002) {
              ui.showToast({ title: '手机号未注册' })
            } else if(data.data.error_code === 2004){
              ui.showToast({ title: '该账号已经与其他微信绑定，请更换账号' })
            }else {
                ui.showToast({ title: '登录成功', icon: 'success' })
                let userinfo = {
                  isLogin: true,
                  data: data.data.result
                }
                ui.hideDialog({ userinfo: userinfo })
                ui.setStorageSync('userinfo', data.data.result)
                that.state = 0
            }
          },
          fail: function (data) {
          }
        })
      }else if(this.type === 'qq'){
        let that = this
        ui.request({
          url: '/touchui-backstage/qqLogin.do',
          data: {
            openid: this.openid,
            tel:this.tel,
            pwd:encryptRSA(this.pwd)
          },
          success: function (data) {
            if (data.data.error_code === -1) {
              ui.showToast({ title: '接口失败' })
            } else if (data.data.error_code === 2001) {
              ui.showToast({ title: '密码错误' })
            } else if (data.data.error_code === 2002) {
              ui.showToast({ title: '手机号未注册' })
            } else if(data.data.error_code === 2004){
              ui.showToast({ title: '该账号已经与其他QQ绑定，请更换账号' })
            } else {
                ui.showToast({ title: '登录成功', icon: 'success' })
                let userinfo = {
                  isLogin: true,
                  data: data.data.result
                }
                ui.hideDialog({ userinfo: userinfo })
                ui.setStorageSync('userinfo', data.data.result)
                that.state = 0
            }
          },
          fail: function (data) {
          }
        })
      }
      
    }
  },
  mounted () {
    this.$DialogOpen((data) => {

    })
    this.$DialogClose((data) => {
      this.currentNum = 0
    })

    let wxOpenCode = sessionStorage.getItem('wxCode')
    if(wxOpenCode){
      ui.getApp().wxUtil.getOpenid(wxOpenCode,(res)=>{
        if(res){
            sessionStorage.setItem("openid",res);//存储openid
            sessionStorage.removeItem('wxCode');
        }
      });
     }
  }
}

</script>

<style lang="less">
// loginInterface.less
.ui-nav-bar{
  width: 100%;
  background-color: #fff;
}
.nav_title {
  color: #A5A5A5;
  font-size: 16px;
}
.ui-dialog-header{
  box-shadow: none;
}
.swiper_wrap{
  height: 100%;
  .ui-ex-swiper-item{
    position: relative
  }
}


.login_content2{
  padding: 50px 20px 0 20px;
  .ui-input{
    border: 0;
  }
  .submit{
    margin-top: 50px;
  }
  .ui-row{
    .ui-view{
      color: #A5A5A5;
    }
  }
  .have_account{
    line-height: 30px;
    // width: 100px;
    display: inline-block;
    color: #9C9C9C;
  }
}
.ui-sms-input{
  .cell-left{
    display: none;
  }
}

.login_wrap{
  height: 100%;
}
.portrait{
  .mix-flex-center();
  height: 100px;
}

.login_content{
  flex: 0 0 500rpx;
  background: #fff;
  padding: 0 20px;
  .ui-form{
    .ui-input{
      border: 0;
      margin: 10px 0 5px 0;
    }
    .ui-view{
      border-bottom: 1px solid #EBEBEB;
    }
  }
  .submit{
    margin-top: 100rpx;
  }
}
.third_party_wrap{
  position:absolute;
  bottom:90px;
  // flex: 0 0 300rpx;
  // background: yellow;
  // margin-top: 100rpx;
  .third_party{
    .ui-view{
      width: 40px;
      height: 40px;
      text-align: center;
      line-height: 40px;
      // background-color: #6D6D6D;
      border-radius: 50%;
      &.weixin{
        border: 1px solid #7ede40;
      }
      &.qq{
        border: 1px solid #25A6F1;
      }
    }
  }
}

.login_bottom{
  // background: black;
  width: 100%;
  position: absolute;
  bottom: 30px;
  .ui-view{
    font-size: 14px;
    color: #9C9C9C;
  }
  .forget_password{
    color: #D4D4D4;
  }
}
</style>